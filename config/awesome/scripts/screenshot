#!/bin/fish

set theme $HOME/.config/awesome/externals/rofi/screenshot.rasi
set savepath (xdg-user-dir PICTURES)/screenshots
set notify_cmd notify-send --app-name="Screenshot Tool" "Screenshot taken"
set clipboard_cmd xclip -selection clipboard -t image/png -i
mkdir -p $savepath

function notify_then_action
  set action_id ($notify_cmd --action="Copy to clipboard" --action="Dismiss" "Your screenshot have been saved at $argv[1]")
  if test $action_id = "0"
     $clipboard_cmd $argv[1]
  end
end

function shot_screen
  set filename (scrot -F "$savepath/screen_%Y%m%d%H%M%S.png" -e 'optipng $f &> /dev/null && echo $f' -d 1)
  notify_then_action $filename
end

function shot_window
  set filename (scrot -u -F "$savepath/window_%Y%m%d%H%M%S.png" -e 'optipng $f &> /dev/null && echo $f' -d 1)
  notify_then_action $filename
end

function shot_crop
  sleep 1 # delay to close rofi
  set filename (scrot -s -F "$savepath/crop_%Y%m%d%H%M%S.png" -e 'optipng $f &> /dev/null && echo $f' -l style="solid",width=1,color="#e8ce9b" -f)
  if test ! $status -eq 1
    notify_then_action $filename
  end
end

function toggle
  # Options
  set window ""
  set screen ""
  set crop ""

  # Variables passed to rofi
  set options "$window\n$screen\n$crop"

  set opt (echo -e "$options" | rofi -dmenu -theme $theme -p "scrot" -selected-row 1)

  switch $opt
    case $screen
      shot_screen
    case $window
      shot_window
    case $crop
      shot_crop
  end
end

switch $argv[1]
  case screen
    shot_screen
  case window
    shot_window
  case crop
    shot_crop
  case toggle
    toggle
  case "*"
    toggle
end
